/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.view;

import com.mycompany.dao.ClienteDAO;
import com.mycompany.model.Cliente;
import com.mycompany.utils.Validador;
import java.awt.event.KeyEvent;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.BorderFactory;
import javax.swing.JOptionPane;
import javax.swing.border.TitledBorder;

/**
 *
 * @author gusta
 */
public class CadastroCliente extends javax.swing.JFrame {

    /**
     * Creates new form CadastroCliente
     */
    public CadastroCliente() {
        initComponents();

        this.btnAlterarCliente.setVisible(false);
    }

    public CadastroCliente(Cliente objCliente) throws ParseException {
        initComponents();

        TitledBorder Titulo = BorderFactory.createTitledBorder("Alterar");
        this.pnlCadastroCliente.setBorder(Titulo);
        this.btnCadastrarCliente.setVisible(false);
        this.btnAlterarCliente.setVisible(true);

        this.ftxtCpfCliente.setEditable(false);

        this.ftxtCpfCliente.setText(objCliente.getCPF());
        this.txtNomeCliente.setText(objCliente.getNome());
        Date date = new SimpleDateFormat("yyyy-MM-dd").parse(objCliente.getNascimento());
        this.dcNascimentoCliente.setDate(date);
        this.txtRuaCliente.setText(objCliente.getRua());
        this.txtBairroCliente.setText(objCliente.getBairro());
        this.ftxtCepCliente.setText(objCliente.getCEP());
        this.txtCidadeCliente.setText(objCliente.getCidade());
        this.txtUfCliente.setText(objCliente.getUF());
        this.ftxtTelefoneCliente.setText(objCliente.getTelefone());
        this.ftxtTelefoneOpcCliente.setText(objCliente.getTelefoneOpc());
        this.txtEmailCliente.setText(objCliente.getEmail());
        this.cbGeneroCliente.setSelectedItem(objCliente.getGenero());
        this.cbEstadoCivilCliente.setSelectedItem(objCliente.getEstadoCivil());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlCadastroCliente = new javax.swing.JPanel();
        jLabel67 = new javax.swing.JLabel();
        jLabel68 = new javax.swing.JLabel();
        jLabel69 = new javax.swing.JLabel();
        jLabel70 = new javax.swing.JLabel();
        jLabel71 = new javax.swing.JLabel();
        jLabel72 = new javax.swing.JLabel();
        jLabel73 = new javax.swing.JLabel();
        jLabel74 = new javax.swing.JLabel();
        jLabel75 = new javax.swing.JLabel();
        jLabel76 = new javax.swing.JLabel();
        jLabel77 = new javax.swing.JLabel();
        jLabel78 = new javax.swing.JLabel();
        jLabel79 = new javax.swing.JLabel();
        txtNomeCliente = new javax.swing.JTextField();
        txtRuaCliente = new javax.swing.JTextField();
        txtBairroCliente = new javax.swing.JTextField();
        txtCidadeCliente = new javax.swing.JTextField();
        txtUfCliente = new javax.swing.JTextField();
        txtEmailCliente = new javax.swing.JTextField();
        cbGeneroCliente = new javax.swing.JComboBox<>();
        cbEstadoCivilCliente = new javax.swing.JComboBox<>();
        btnCadastrarCliente = new javax.swing.JButton();
        dcNascimentoCliente = new com.toedter.calendar.JDateChooser();
        ftxtCpfCliente = new javax.swing.JFormattedTextField();
        ftxtCepCliente = new javax.swing.JFormattedTextField();
        ftxtTelefoneCliente = new javax.swing.JFormattedTextField();
        ftxtTelefoneOpcCliente = new javax.swing.JFormattedTextField();
        btnAlterarCliente = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Cliente");
        setLocationByPlatform(true);
        setType(java.awt.Window.Type.POPUP);

        pnlCadastroCliente.setBorder(javax.swing.BorderFactory.createTitledBorder("Cadastro"));

        jLabel67.setText("*Nome:");

        jLabel68.setText("*CPF:");

        jLabel69.setText("*Rua:");

        jLabel70.setText("Bairro:");

        jLabel71.setText("*CEP:");

        jLabel72.setText("Cidade:");

        jLabel73.setText("UF:");

        jLabel74.setText("Telefone:");

        jLabel75.setText("Telefone opcional:");

        jLabel76.setText("*E-mail:");

        jLabel77.setText("*Sexo:");

        jLabel78.setText("Estado Civil:");

        jLabel79.setText("Data de Nascimento:");

        txtRuaCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtRuaClienteActionPerformed(evt);
            }
        });

        txtUfCliente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtUfClienteKeyTyped(evt);
            }
        });

        cbGeneroCliente.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecione", "Masculino", "Feminino", "Transgenêro", "Prefiro não responder" }));
        cbGeneroCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbGeneroClienteActionPerformed(evt);
            }
        });

        cbEstadoCivilCliente.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecione", "Solteiro(a)", "Casado(a)", "Separado(a)", "Divorciado(a)", "Viúvo(a)" }));
        cbEstadoCivilCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbEstadoCivilClienteActionPerformed(evt);
            }
        });

        btnCadastrarCliente.setText("Cadastrar");
        btnCadastrarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCadastrarClienteActionPerformed(evt);
            }
        });

        dcNascimentoCliente.setDateFormatString("dd-MM-yyyy");

        try {
            ftxtCpfCliente.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        try {
            ftxtCepCliente.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("#####-###")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        try {
            ftxtTelefoneCliente.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("(##) # ####-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        try {
            ftxtTelefoneOpcCliente.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("(##) # ####-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        btnAlterarCliente.setText("Alterar");
        btnAlterarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAlterarClienteActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        jLabel1.setText("Campos com \" * \" devem ser preenchidos obrigatoriamente!!!");

        javax.swing.GroupLayout pnlCadastroClienteLayout = new javax.swing.GroupLayout(pnlCadastroCliente);
        pnlCadastroCliente.setLayout(pnlCadastroClienteLayout);
        pnlCadastroClienteLayout.setHorizontalGroup(
            pnlCadastroClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCadastroClienteLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlCadastroClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlCadastroClienteLayout.createSequentialGroup()
                        .addGroup(pnlCadastroClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel72)
                            .addGroup(pnlCadastroClienteLayout.createSequentialGroup()
                                .addGroup(pnlCadastroClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel67)
                                    .addComponent(jLabel69))
                                .addGap(2, 2, 2))
                            .addComponent(jLabel74)
                            .addComponent(jLabel77))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlCadastroClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlCadastroClienteLayout.createSequentialGroup()
                                .addComponent(ftxtTelefoneCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel75)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ftxtTelefoneOpcCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 75, Short.MAX_VALUE)
                                .addComponent(jLabel76)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtEmailCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(pnlCadastroClienteLayout.createSequentialGroup()
                                .addGroup(pnlCadastroClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(pnlCadastroClienteLayout.createSequentialGroup()
                                        .addComponent(txtRuaCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel70))
                                    .addGroup(pnlCadastroClienteLayout.createSequentialGroup()
                                        .addComponent(txtNomeCliente)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel68)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(pnlCadastroClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(pnlCadastroClienteLayout.createSequentialGroup()
                                        .addComponent(ftxtCpfCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel79)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(dcNascimentoCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(pnlCadastroClienteLayout.createSequentialGroup()
                                        .addComponent(txtBairroCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel71)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(ftxtCepCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(pnlCadastroClienteLayout.createSequentialGroup()
                                .addGroup(pnlCadastroClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlCadastroClienteLayout.createSequentialGroup()
                                        .addComponent(cbGeneroCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel78)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(cbEstadoCivilCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlCadastroClienteLayout.createSequentialGroup()
                                        .addComponent(txtCidadeCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel73)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtUfCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(pnlCadastroClienteLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnAlterarCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnCadastrarCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        pnlCadastroClienteLayout.setVerticalGroup(
            pnlCadastroClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCadastroClienteLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlCadastroClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlCadastroClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel67)
                        .addComponent(jLabel79)
                        .addComponent(jLabel68)
                        .addComponent(ftxtCpfCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtNomeCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(dcNascimentoCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(pnlCadastroClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtBairroCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel70)
                    .addComponent(jLabel69)
                    .addComponent(txtRuaCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel71)
                    .addComponent(ftxtCepCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(pnlCadastroClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel72)
                    .addComponent(txtCidadeCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel73)
                    .addComponent(txtUfCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(pnlCadastroClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel74)
                    .addComponent(jLabel75)
                    .addComponent(jLabel76)
                    .addComponent(txtEmailCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ftxtTelefoneCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ftxtTelefoneOpcCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(pnlCadastroClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel77)
                    .addComponent(jLabel78)
                    .addComponent(cbGeneroCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbEstadoCivilCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(pnlCadastroClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlCadastroClienteLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(pnlCadastroClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnCadastrarCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnAlterarCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(16, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlCadastroClienteLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addGap(15, 15, 15))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlCadastroCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlCadastroCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void txtRuaClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtRuaClienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtRuaClienteActionPerformed

    private void cbGeneroClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbGeneroClienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbGeneroClienteActionPerformed

    private void cbEstadoCivilClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbEstadoCivilClienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbEstadoCivilClienteActionPerformed

    private void btnCadastrarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCadastrarClienteActionPerformed
        String CPF = String.valueOf(ftxtCpfCliente.getText());
        String Nome = String.valueOf(txtNomeCliente.getText());
        SimpleDateFormat formatoData = new SimpleDateFormat("yyyy-MM-dd");
        String Nascimento = formatoData.format(dcNascimentoCliente.getDate());
        String Rua = String.valueOf(txtRuaCliente.getText());
        String Bairro = String.valueOf(txtBairroCliente.getText());
        String CEP = String.valueOf(ftxtCepCliente.getText());
        String Cidade = String.valueOf(txtCidadeCliente.getText());
        String UF = String.valueOf(txtUfCliente.getText().toUpperCase());
        String Telefone = String.valueOf(ftxtTelefoneCliente.getText());
        String TelefoneOpc = String.valueOf(ftxtTelefoneOpcCliente.getText());
        String Email = String.valueOf(txtEmailCliente.getText());
        String Genero = String.valueOf(cbGeneroCliente.getSelectedItem());
        String EstadoCivil = String.valueOf(cbEstadoCivilCliente.getSelectedItem());
        
        Date dataAtual = new Date();

        Validador validarCliente = new Validador();

        if (!validarCliente.isCPF(CPF) || !validarCliente.isNome(Nome) || !validarCliente.isRua(Rua) || !validarCliente.isCep(CEP) || !validarCliente.isEmail(Email) || cbGeneroCliente.getSelectedIndex() == 0 || dcNascimentoCliente.getDate().after(dataAtual)) {
            JOptionPane.showMessageDialog(this, "Preencha todos os campos obrigatórios corretamente!");

            String preencherCampos = "Preencha corretamente os campos:\n";

            if (!validarCliente.isCPF(CPF)) {
                preencherCampos += "\n- CPF - Atual é inválido!";
            }
            if (!validarCliente.isNome(Nome)) {
                preencherCampos += "\n- Nome";
            }
            if(dcNascimentoCliente.getDate().after(dataAtual)){
                preencherCampos += "\n- Nascimento - data deve ser anterior a data atual";
            }
            if (!validarCliente.isRua(Rua)) {
                preencherCampos += "\n- Rua";
            }
            if (!validarCliente.isCep(CEP)) {
                preencherCampos += "\n- CEP";
            }
            if (!validarCliente.isEmail(Email)) {
                preencherCampos += "\n- E-mail - user@exemplo.com";
            }
            if (cbGeneroCliente.getSelectedIndex() == 0) {
                preencherCampos += "\n- Sexo";
            }

            JOptionPane.showMessageDialog(this, preencherCampos);
        } else {
            if (ClienteDAO.validarCPF(CPF)) {
                Cliente objCliente = new Cliente(CPF, Nome, Nascimento, Rua, Bairro, CEP, Cidade, UF, Telefone, TelefoneOpc, Email, Genero, EstadoCivil);
                boolean retorno = ClienteDAO.cadastrarCliente(objCliente);

                if (retorno) {
                    JOptionPane.showMessageDialog(this, "Cadastrado com sucesso!");
                    ftxtCpfCliente.setText("");
                    txtNomeCliente.setText("");
                    dcNascimentoCliente.setDate(null);
                    txtRuaCliente.setText("");
                    txtBairroCliente.setText("");
                    ftxtCepCliente.setText("");
                    txtCidadeCliente.setText("");
                    txtUfCliente.setText("");
                    ftxtTelefoneCliente.setText("");
                    ftxtTelefoneOpcCliente.setText("");
                    txtEmailCliente.setText("");
                    cbGeneroCliente.setSelectedIndex(0);
                    cbEstadoCivilCliente.setSelectedIndex(0);
                } else {
                    JOptionPane.showMessageDialog(this, "Falha ao cadastrar!");
                }
            } else {
                JOptionPane.showMessageDialog(this, "Já existe um cliente cadastrado com esse CPF!");
            }
        }
    }//GEN-LAST:event_btnCadastrarClienteActionPerformed

    private void btnAlterarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAlterarClienteActionPerformed
        String CPF = String.valueOf(ftxtCpfCliente.getText());
        String Nome = String.valueOf(txtNomeCliente.getText());
        SimpleDateFormat dataNasc = new SimpleDateFormat("yyyy-MM-dd");
        String Nascimento = dataNasc.format(dcNascimentoCliente.getDate());
        String Rua = String.valueOf(txtRuaCliente.getText());
        String Bairro = String.valueOf(txtBairroCliente.getText());
        String CEP = String.valueOf(ftxtCepCliente.getText());
        String Cidade = String.valueOf(txtCidadeCliente.getText());
        String UF = String.valueOf(txtUfCliente.getText().toUpperCase());
        String Telefone = String.valueOf(ftxtTelefoneCliente.getText());
        String TelefoneOpc = String.valueOf(ftxtTelefoneOpcCliente.getText());
        String Email = String.valueOf(txtEmailCliente.getText());
        String Genero = String.valueOf(cbGeneroCliente.getSelectedItem());
        String EstadoCivil = String.valueOf(cbEstadoCivilCliente.getSelectedItem());

        Validador validarCliente = new Validador();

        if (!validarCliente.isCPF(CPF) || !validarCliente.isNome(Nome) || !validarCliente.isRua(Rua) || !validarCliente.isCep(CEP) || !validarCliente.isEmail(Email) || cbGeneroCliente.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(this, "Preencha todos os campos obrigatórios corretamente!");

            String preencherCampos = "Preencha corretamente os campos:\n";

            if (!validarCliente.isCPF(CPF)) {
                preencherCampos += "\n- CPF";
            }
            if (!validarCliente.isNome(Nome)) {
                preencherCampos += "\n- Nome";
            }
            if (!validarCliente.isRua(Rua)) {
                preencherCampos += "\n- Rua";
            }
            if (!validarCliente.isCep(CEP)) {
                preencherCampos += "\n- CEP";
            }
            if (!validarCliente.isEmail(Email)) {
                preencherCampos += "\n- E-mail - EX: user@exemplo.com";
            }
            if (cbGeneroCliente.getSelectedIndex() == 0) {
                preencherCampos += "\n- Sexo";
            }

            JOptionPane.showMessageDialog(this, preencherCampos);
        } else {
            Cliente objCliente = new Cliente(CPF, Nome, Nascimento, Rua, Bairro, CEP, Cidade, UF, Telefone, TelefoneOpc, Email, Genero, EstadoCivil);
            boolean retorno = ClienteDAO.alterarCliente(objCliente);

            if (retorno) {
                JOptionPane.showMessageDialog(this, "Alterado com sucesso!");
                this.setVisible(false);
            } else {
                JOptionPane.showMessageDialog(this, "Falha ao alterar!");
            }
        }
    }//GEN-LAST:event_btnAlterarClienteActionPerformed

    private void txtUfClienteKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtUfClienteKeyTyped

        // Valida o campo UF
        char key = evt.getKeyChar();

        if ((key > '0' && key < '9') && key != KeyEvent.VK_BACK_SPACE || txtUfCliente.getText().length() >= 2 || !Character.isLetter(key)) {
            evt.consume();
        }
    }//GEN-LAST:event_txtUfClienteKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CadastroCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CadastroCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CadastroCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CadastroCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CadastroCliente().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAlterarCliente;
    private javax.swing.JButton btnCadastrarCliente;
    private javax.swing.JComboBox<String> cbEstadoCivilCliente;
    private javax.swing.JComboBox<String> cbGeneroCliente;
    private com.toedter.calendar.JDateChooser dcNascimentoCliente;
    private javax.swing.JFormattedTextField ftxtCepCliente;
    private javax.swing.JFormattedTextField ftxtCpfCliente;
    private javax.swing.JFormattedTextField ftxtTelefoneCliente;
    private javax.swing.JFormattedTextField ftxtTelefoneOpcCliente;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel67;
    private javax.swing.JLabel jLabel68;
    private javax.swing.JLabel jLabel69;
    private javax.swing.JLabel jLabel70;
    private javax.swing.JLabel jLabel71;
    private javax.swing.JLabel jLabel72;
    private javax.swing.JLabel jLabel73;
    private javax.swing.JLabel jLabel74;
    private javax.swing.JLabel jLabel75;
    private javax.swing.JLabel jLabel76;
    private javax.swing.JLabel jLabel77;
    private javax.swing.JLabel jLabel78;
    private javax.swing.JLabel jLabel79;
    private javax.swing.JPanel pnlCadastroCliente;
    private javax.swing.JTextField txtBairroCliente;
    private javax.swing.JTextField txtCidadeCliente;
    private javax.swing.JTextField txtEmailCliente;
    private javax.swing.JTextField txtNomeCliente;
    private javax.swing.JTextField txtRuaCliente;
    private javax.swing.JTextField txtUfCliente;
    // End of variables declaration//GEN-END:variables
}
