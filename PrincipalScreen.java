/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.view;

/**
 * Classes acessoras
 */
import com.mycompany.dao.ClienteDAO;
import com.mycompany.dao.ProdutoDAO;
import com.mycompany.dao.RelatorioDAO;
import com.mycompany.dao.VendaDAO;
import com.mycompany.model.Cliente;
import com.mycompany.model.Produto;
import com.mycompany.model.Relatorio;
import com.mycompany.model.Venda;
import com.mycompany.utils.Validador;
import java.awt.event.KeyEvent;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 * Projeto desenvolvido para disciplina de Projeto Integrador durante o 2º
 * semestre do curso de Análise e Desenvolvimento de Sistemas.
 *
 * A proposta foi escolher um dos seguimentos de loja já definidos e desenvolve
 * um sistema de vendas para o mesmo. Nossa escolha foi o seguimento de
 * instrumentos músicais, pensado para que o próprio vendedor interaja
 * diretamente com o sistema, realizando o cadastramento de Clientes, Produtos e
 * auxiliando o cliente no momento da realização da venda.
 *
 *
 */
/**
 *
 * @authors Gustavo Horikochi, Gustavo Leme, Igor Camilo & Lucas de Jesus
 */
public class PrincipalScreen extends javax.swing.JFrame {

    /**
     * Inicialização da Tela Principal
     */
    public PrincipalScreen() {
        initComponents();

        tblVendaProduto.getColumnModel().getColumn(0).setPreferredWidth(10);
        tblVendaProduto.getColumnModel().getColumn(2).setPreferredWidth(23);
        tblVendaProduto.getColumnModel().getColumn(3).setPreferredWidth(270);
        tblVendaProduto.getColumnModel().getColumn(4).setPreferredWidth(30);
        tblVendaProduto.getColumnModel().getColumn(5).setPreferredWidth(10);
        tblVendaProduto.getColumnModel().getColumn(6).setPreferredWidth(10);

        tblCarrinho.getColumnModel().getColumn(2).setPreferredWidth(150);
        tblCarrinho.getColumnModel().getColumn(3).setPreferredWidth(100);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btngrpBuscarCliente = new javax.swing.ButtonGroup();
        btngrpBuscarProduto = new javax.swing.ButtonGroup();
        pnlLojaIntrumentosMusicais = new javax.swing.JTabbedPane();
        pnlInicio = new javax.swing.JPanel();
        pnlMainScreen = new javax.swing.JPanel();
        lblName = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        pnlVendas = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        cbVendaCategoriaProduto = new javax.swing.JComboBox<>();
        btnVendaBuscarProduto = new javax.swing.JButton();
        btnVendaListarProduto = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        tblVendaProduto = new javax.swing.JTable();
        btnAdicionarCarrinho = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        spnVendaQuantidadeProduto = new javax.swing.JSpinner();
        jPanel2 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        txtVendaRuaCliente = new javax.swing.JTextField();
        txtVendaNomeCliente = new javax.swing.JTextField();
        txtVendaEmailCliente = new javax.swing.JTextField();
        txtVendaTelefoneCliente = new javax.swing.JTextField();
        ftxtVendaCpfCliente = new javax.swing.JFormattedTextField();
        jLabel9 = new javax.swing.JLabel();
        btnVendaValidarCPF = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblCarrinho = new javax.swing.JTable();
        btnFinalizarVenda = new javax.swing.JButton();
        jLabel17 = new javax.swing.JLabel();
        btnRemoveItemCarrinho = new javax.swing.JButton();
        ftxtTotalVenda = new javax.swing.JFormattedTextField();
        pnlGerirCliente = new javax.swing.JPanel();
        txtBuscarNomeCliente = new javax.swing.JTextField();
        btnBuscarCliente = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblCliente = new javax.swing.JTable();
        btnAlterarCliente = new javax.swing.JButton();
        btnExcluirCliente = new javax.swing.JButton();
        btnCadastrarCliente = new javax.swing.JButton();
        btnListarCliente = new javax.swing.JButton();
        rdbtnBuscarCpfCliente = new javax.swing.JRadioButton();
        rdbtnBuscarNomeCliente = new javax.swing.JRadioButton();
        ftxtBuscarCpfCliente = new javax.swing.JFormattedTextField();
        pnlGerirProdutos = new javax.swing.JPanel();
        btnBuscarProduto = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        tblProduto = new javax.swing.JTable();
        btnAlterarProduto = new javax.swing.JButton();
        btnExcluirProduto = new javax.swing.JButton();
        btnCadastrarProduto = new javax.swing.JButton();
        btnListarProduto = new javax.swing.JButton();
        txtBuscarIdProduto = new javax.swing.JTextField();
        cbBuscarCategoriaProduto = new javax.swing.JComboBox<>();
        rdbtnBuscarCategoriaProduto = new javax.swing.JRadioButton();
        rdbtnBuscarIdProduto = new javax.swing.JRadioButton();
        pnlRelatVendas = new javax.swing.JPanel();
        btnListarRelatorioSintetico = new javax.swing.JButton();
        btnBuscarRelatorio = new javax.swing.JButton();
        jScrollPane6 = new javax.swing.JScrollPane();
        tblRelatorioSintetico = new javax.swing.JTable();
        btnMostrarRelatorioAnalitico = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        dcDataInicio = new com.toedter.calendar.JDateChooser();
        dcDataFim = new com.toedter.calendar.JDateChooser();
        jScrollPane7 = new javax.swing.JScrollPane();
        tblRelatorioAnalitico = new javax.swing.JTable();
        jLabel7 = new javax.swing.JLabel();
        ftxtTotalPeriodo = new javax.swing.JFormattedTextField();
        jLabel1 = new javax.swing.JLabel();
        btnSair = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("SAMPA MUSIC");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setLocation(new java.awt.Point(0, 0));
        setLocationByPlatform(true);

        pnlLojaIntrumentosMusicais.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        pnlMainScreen.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        lblName.setFont(new java.awt.Font("Segoe UI", 0, 56)); // NOI18N
        lblName.setText("SampaMusic - Senac");

        jLabel2.setForeground(new java.awt.Color(153, 153, 153));
        jLabel2.setText("Projeto desenvolvido para disciplina de Projeto Integrador durante o 2º semestre do curso de Análise e Desenvolvimento de Sistemas.");

        jLabel8.setForeground(new java.awt.Color(153, 153, 153));
        jLabel8.setText("A proposta foi escolher um dos seguimentos de loja já definidos e desenvolver um sistema de vendas para o mesmo.");

        jLabel10.setForeground(new java.awt.Color(153, 153, 153));
        jLabel10.setText("Nossa escolha foi o seguimento de instrumentos músicais, pensado para que o próprio vendedor interaja diretamente com o sistema,");

        jLabel11.setForeground(new java.awt.Color(153, 153, 153));
        jLabel11.setText("realizando o cadastramento de Clientes, Produtos e auxiliando o cliente no momento da realização da venda.");

        jLabel14.setText("Created by Gustavo Horikochi, Gustavo Leme :3, Igor Camilo e Lucas de Jesus");

        javax.swing.GroupLayout pnlMainScreenLayout = new javax.swing.GroupLayout(pnlMainScreen);
        pnlMainScreen.setLayout(pnlMainScreenLayout);
        pnlMainScreenLayout.setHorizontalGroup(
            pnlMainScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlMainScreenLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel8)
                .addGap(230, 230, 230))
            .addGroup(pnlMainScreenLayout.createSequentialGroup()
                .addGap(317, 317, 317)
                .addComponent(lblName)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlMainScreenLayout.createSequentialGroup()
                .addContainerGap(219, Short.MAX_VALUE)
                .addGroup(pnlMainScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlMainScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel2)
                        .addGroup(pnlMainScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlMainScreenLayout.createSequentialGroup()
                                .addComponent(jLabel11)
                                .addGap(250, 250, 250))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlMainScreenLayout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addGap(186, 186, 186))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlMainScreenLayout.createSequentialGroup()
                        .addComponent(jLabel14)
                        .addContainerGap())))
        );
        pnlMainScreenLayout.setVerticalGroup(
            pnlMainScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMainScreenLayout.createSequentialGroup()
                .addGap(131, 131, 131)
                .addComponent(lblName, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(62, 62, 62)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 65, Short.MAX_VALUE)
                .addComponent(jLabel14)
                .addContainerGap())
        );

        javax.swing.GroupLayout pnlInicioLayout = new javax.swing.GroupLayout(pnlInicio);
        pnlInicio.setLayout(pnlInicioLayout);
        pnlInicioLayout.setHorizontalGroup(
            pnlInicioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlMainScreen, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        pnlInicioLayout.setVerticalGroup(
            pnlInicioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlMainScreen, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pnlLojaIntrumentosMusicais.addTab("Inicio", pnlInicio);

        pnlVendas.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        pnlVendas.setTabPlacement(javax.swing.JTabbedPane.LEFT);

        jPanel3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        cbVendaCategoriaProduto.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecione", "Violão", "Guitarra", "Contra-Baixo", "Percursão", "Metal", "Teclado", "Piano-Eletrônico" }));

        btnVendaBuscarProduto.setText("Buscar");
        btnVendaBuscarProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVendaBuscarProdutoActionPerformed(evt);
            }
        });

        btnVendaListarProduto.setText("Listar");
        btnVendaListarProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVendaListarProdutoActionPerformed(evt);
            }
        });

        jLabel3.setText("Categoria:");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(299, 299, 299)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbVendaCategoriaProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45)
                .addComponent(btnVendaBuscarProduto)
                .addGap(18, 18, 18)
                .addComponent(btnVendaListarProduto)
                .addContainerGap(336, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbVendaCategoriaProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnVendaBuscarProduto)
                    .addComponent(jLabel3)
                    .addComponent(btnVendaListarProduto))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tblVendaProduto.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Nome", "Categoria", "Descrição", "Cor", "Preço", "Quantidade"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane5.setViewportView(tblVendaProduto);

        btnAdicionarCarrinho.setText("Adicionar ao Carrinho");
        btnAdicionarCarrinho.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdicionarCarrinhoActionPerformed(evt);
            }
        });

        jLabel4.setText("Quantidade:");

        spnVendaQuantidadeProduto.setModel(new javax.swing.SpinnerNumberModel(1, 1, null, 1));
        spnVendaQuantidadeProduto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                spnVendaQuantidadeProdutoKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane5)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(spnVendaQuantidadeProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(281, 281, 281)
                        .addComponent(btnAdicionarCarrinho, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 443, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAdicionarCarrinho, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(spnVendaQuantidadeProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pnlVendas.addTab("VENDA", jPanel1);

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Dados do Cliente"));

        jLabel12.setText("Rua:");

        jLabel13.setText("Nome:");

        jLabel18.setText("E-mail:");

        jLabel19.setText("Telefone:");

        txtVendaRuaCliente.setEditable(false);

        txtVendaNomeCliente.setEditable(false);

        txtVendaEmailCliente.setEditable(false);

        txtVendaTelefoneCliente.setEditable(false);

        try {
            ftxtVendaCpfCliente.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        jLabel9.setText("CPF:");

        btnVendaValidarCPF.setText("Buscar");
        btnVendaValidarCPF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVendaValidarCPFActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel9)
                    .addComponent(jLabel19)
                    .addComponent(jLabel13)
                    .addComponent(jLabel18)
                    .addComponent(jLabel12))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(ftxtVendaCpfCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 24, Short.MAX_VALUE)
                        .addComponent(btnVendaValidarCPF))
                    .addComponent(txtVendaTelefoneCliente)
                    .addComponent(txtVendaEmailCliente, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtVendaNomeCliente)
                    .addComponent(txtVendaRuaCliente))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(ftxtVendaCpfCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnVendaValidarCPF))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 49, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtVendaNomeCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtVendaRuaCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19)
                    .addComponent(txtVendaTelefoneCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtVendaEmailCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel18))
                .addGap(20, 20, 20))
        );

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder("FINALIZAÇÃO"));

        jLabel15.setText("Descrição do pedido");

        tblCarrinho.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item", "ID", "Produto", "Categoria", "Preço", "Quantidade", "Subtotal"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblCarrinho);

        btnFinalizarVenda.setText("FINALIZAR A VENDA");
        btnFinalizarVenda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFinalizarVendaActionPerformed(evt);
            }
        });

        jLabel17.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel17.setText("VALOR TOTAL:");

        btnRemoveItemCarrinho.setText("Remover Item");
        btnRemoveItemCarrinho.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveItemCarrinhoActionPerformed(evt);
            }
        });

        ftxtTotalVenda.setEditable(false);
        ftxtTotalVenda.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,###.00"))));

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 719, Short.MAX_VALUE)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel15)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnRemoveItemCarrinho, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel17)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ftxtTotalVenda, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnFinalizarVenda, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel15)
                    .addComponent(btnRemoveItemCarrinho, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 336, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnFinalizarVenda, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel17)
                    .addComponent(ftxtTotalVenda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(34, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnlVendas.addTab("CARRINHO", jPanel2);

        pnlLojaIntrumentosMusicais.addTab("Vendas", pnlVendas);

        txtBuscarNomeCliente.setEditable(false);

        btnBuscarCliente.setText("Buscar");
        btnBuscarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarClienteActionPerformed(evt);
            }
        });

        tblCliente.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "CPF", "Nome", "Nascimento", "Rua", "CEP", "UF", "Telefone", "E-mail"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(tblCliente);

        btnAlterarCliente.setText("Alterar");
        btnAlterarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAlterarClienteActionPerformed(evt);
            }
        });

        btnExcluirCliente.setText("Excluir");
        btnExcluirCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirClienteActionPerformed(evt);
            }
        });

        btnCadastrarCliente.setText("Cadastrar");
        btnCadastrarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCadastrarClienteActionPerformed(evt);
            }
        });

        btnListarCliente.setText("Listar");
        btnListarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnListarClienteActionPerformed(evt);
            }
        });

        btngrpBuscarCliente.add(rdbtnBuscarCpfCliente);
        rdbtnBuscarCpfCliente.setText("CPF:");
        rdbtnBuscarCpfCliente.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                rdbtnBuscarCpfClienteItemStateChanged(evt);
            }
        });

        btngrpBuscarCliente.add(rdbtnBuscarNomeCliente);
        rdbtnBuscarNomeCliente.setText("Nome:");
        rdbtnBuscarNomeCliente.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                rdbtnBuscarNomeClienteItemStateChanged(evt);
            }
        });

        ftxtBuscarCpfCliente.setEditable(false);
        try {
            ftxtBuscarCpfCliente.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        javax.swing.GroupLayout pnlGerirClienteLayout = new javax.swing.GroupLayout(pnlGerirCliente);
        pnlGerirCliente.setLayout(pnlGerirClienteLayout);
        pnlGerirClienteLayout.setHorizontalGroup(
            pnlGerirClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlGerirClienteLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(pnlGerirClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(pnlGerirClienteLayout.createSequentialGroup()
                        .addComponent(rdbtnBuscarCpfCliente)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ftxtBuscarCpfCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(rdbtnBuscarNomeCliente)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtBuscarNomeCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(42, 42, 42)
                        .addComponent(btnBuscarCliente)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnListarCliente)
                        .addGap(30, 30, 30)
                        .addComponent(btnCadastrarCliente)
                        .addGap(30, 30, 30)
                        .addComponent(btnAlterarCliente)
                        .addGap(30, 30, 30)
                        .addComponent(btnExcluirCliente))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 1058, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(28, Short.MAX_VALUE))
        );
        pnlGerirClienteLayout.setVerticalGroup(
            pnlGerirClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlGerirClienteLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(pnlGerirClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtBuscarNomeCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBuscarCliente)
                    .addComponent(btnAlterarCliente)
                    .addComponent(btnExcluirCliente)
                    .addComponent(btnCadastrarCliente)
                    .addComponent(btnListarCliente)
                    .addComponent(rdbtnBuscarCpfCliente)
                    .addComponent(rdbtnBuscarNomeCliente)
                    .addComponent(ftxtBuscarCpfCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 451, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(30, Short.MAX_VALUE))
        );

        pnlLojaIntrumentosMusicais.addTab("Gestão de Clientes", pnlGerirCliente);

        btnBuscarProduto.setText("Buscar");
        btnBuscarProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarProdutoActionPerformed(evt);
            }
        });

        tblProduto.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Nome", "Categoria", "Descrição", "Cor", "Valor de Custo", "Valor de Venda", "Quantidade"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(tblProduto);

        btnAlterarProduto.setText("Alterar");
        btnAlterarProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAlterarProdutoActionPerformed(evt);
            }
        });

        btnExcluirProduto.setText("Excluir");
        btnExcluirProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirProdutoActionPerformed(evt);
            }
        });

        btnCadastrarProduto.setText("Cadastrar");
        btnCadastrarProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCadastrarProdutoActionPerformed(evt);
            }
        });

        btnListarProduto.setText("Listar");
        btnListarProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnListarProdutoActionPerformed(evt);
            }
        });

        txtBuscarIdProduto.setEnabled(false);
        txtBuscarIdProduto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtBuscarIdProdutoKeyTyped(evt);
            }
        });

        cbBuscarCategoriaProduto.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecione", "Violão", "Guitarra", "Contra-Baixo", "Percussão", "Metal", "Teclado", "Piano Eletrônico" }));
        cbBuscarCategoriaProduto.setEnabled(false);

        btngrpBuscarProduto.add(rdbtnBuscarCategoriaProduto);
        rdbtnBuscarCategoriaProduto.setText("Categoria:");
        rdbtnBuscarCategoriaProduto.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                rdbtnBuscarCategoriaProdutoItemStateChanged(evt);
            }
        });

        btngrpBuscarProduto.add(rdbtnBuscarIdProduto);
        rdbtnBuscarIdProduto.setText("ID:");
        rdbtnBuscarIdProduto.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                rdbtnBuscarIdProdutoItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout pnlGerirProdutosLayout = new javax.swing.GroupLayout(pnlGerirProdutos);
        pnlGerirProdutos.setLayout(pnlGerirProdutosLayout);
        pnlGerirProdutosLayout.setHorizontalGroup(
            pnlGerirProdutosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlGerirProdutosLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(pnlGerirProdutosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(pnlGerirProdutosLayout.createSequentialGroup()
                        .addComponent(rdbtnBuscarIdProduto)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtBuscarIdProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(rdbtnBuscarCategoriaProduto)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbBuscarCategoriaProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(49, 49, 49)
                        .addComponent(btnBuscarProduto)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnListarProduto)
                        .addGap(30, 30, 30)
                        .addComponent(btnCadastrarProduto)
                        .addGap(30, 30, 30)
                        .addComponent(btnAlterarProduto)
                        .addGap(30, 30, 30)
                        .addComponent(btnExcluirProduto))
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 1058, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(28, Short.MAX_VALUE))
        );
        pnlGerirProdutosLayout.setVerticalGroup(
            pnlGerirProdutosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlGerirProdutosLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(pnlGerirProdutosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBuscarProduto)
                    .addComponent(btnAlterarProduto)
                    .addComponent(btnExcluirProduto)
                    .addComponent(btnCadastrarProduto)
                    .addComponent(btnListarProduto)
                    .addComponent(cbBuscarCategoriaProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rdbtnBuscarCategoriaProduto)
                    .addComponent(rdbtnBuscarIdProduto)
                    .addComponent(txtBuscarIdProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 451, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(30, Short.MAX_VALUE))
        );

        pnlLojaIntrumentosMusicais.addTab("Gestão de Produtos", pnlGerirProdutos);

        btnListarRelatorioSintetico.setText("Listar");
        btnListarRelatorioSintetico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnListarRelatorioSinteticoActionPerformed(evt);
            }
        });

        btnBuscarRelatorio.setText("Buscar");
        btnBuscarRelatorio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarRelatorioActionPerformed(evt);
            }
        });

        tblRelatorioSintetico.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID da Venda", "CPF do Cliente", "Nome do Cliente", "Valor Total", "Data da Venda"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane6.setViewportView(tblRelatorioSintetico);

        btnMostrarRelatorioAnalitico.setText("Detalhes");
        btnMostrarRelatorioAnalitico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMostrarRelatorioAnaliticoActionPerformed(evt);
            }
        });

        jLabel5.setText("Data de Início:");

        jLabel6.setText("Data Final:");

        dcDataInicio.setDateFormatString("dd-MM-yyyy");

        dcDataFim.setDateFormatString("dd-MM-yyyy");

        tblRelatorioAnalitico.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID  do Produto", "Nome do Produto", "Quantidade", "Preço Unitário", "Preço Total"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane7.setViewportView(tblRelatorioAnalitico);

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel7.setText("Valor Total do Período:");

        ftxtTotalPeriodo.setEditable(false);
        ftxtTotalPeriodo.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(java.text.NumberFormat.getCurrencyInstance())));

        javax.swing.GroupLayout pnlRelatVendasLayout = new javax.swing.GroupLayout(pnlRelatVendas);
        pnlRelatVendas.setLayout(pnlRelatVendasLayout);
        pnlRelatVendasLayout.setHorizontalGroup(
            pnlRelatVendasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlRelatVendasLayout.createSequentialGroup()
                .addContainerGap(31, Short.MAX_VALUE)
                .addGroup(pnlRelatVendasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(pnlRelatVendasLayout.createSequentialGroup()
                        .addComponent(btnMostrarRelatorioAnalitico)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ftxtTotalPeriodo, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlRelatVendasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 1055, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(pnlRelatVendasLayout.createSequentialGroup()
                            .addComponent(jLabel5)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(dcDataInicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(jLabel6)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(dcDataFim, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(btnBuscarRelatorio, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(btnListarRelatorioSintetico, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 1055, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30))
        );
        pnlRelatVendasLayout.setVerticalGroup(
            pnlRelatVendasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlRelatVendasLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(pnlRelatVendasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlRelatVendasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnBuscarRelatorio)
                        .addComponent(btnListarRelatorioSintetico)
                        .addComponent(jLabel5)
                        .addComponent(jLabel6))
                    .addComponent(dcDataInicio, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dcDataFim, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(13, 13, 13)
                .addGroup(pnlRelatVendasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnMostrarRelatorioAnalitico)
                    .addComponent(jLabel7)
                    .addComponent(ftxtTotalPeriodo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
        );

        pnlLojaIntrumentosMusicais.addTab("Relatório de Vendas", pnlRelatVendas);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel1.setText("SampaMusic - Senac");

        btnSair.setText("SAIR");
        btnSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSairActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(btnSair, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(19, 19, 19))
            .addGroup(layout.createSequentialGroup()
                .addComponent(pnlLojaIntrumentosMusicais, javax.swing.GroupLayout.PREFERRED_SIZE, 1120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(pnlLojaIntrumentosMusicais, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSair, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Realização da venda
     */
    private void btnFinalizarVendaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFinalizarVendaActionPerformed
        String cpfVenda = ftxtVendaCpfCliente.getText();
        cpfVenda = cpfVenda.replace(".", "");
        cpfVenda = cpfVenda.replace("-", "");
        cpfVenda = cpfVenda.replace(" ", "");
        if (cpfVenda == "") {
            JOptionPane.showMessageDialog(this, "Verifique se o campo CPF está corretamente preenchido!");
        }

        if (tblCarrinho.getRowCount() == 0) {
            JOptionPane.showMessageDialog(this, "Não há itens no carrinho");
        }

        if (cpfVenda != "" && tblCarrinho.getRowCount() > 0) {
            String cpfCliente = ftxtVendaCpfCliente.getText();
            Double valorTotal = Double.parseDouble(ftxtTotalVenda.getValue().toString());
            Date data = new Date();
            String dataVenda = new SimpleDateFormat("yyyy-MM-dd").format(data);

            Venda objVenda = new Venda(cpfCliente, valorTotal, dataVenda);
            int idVenda = VendaDAO.efetuarVenda(objVenda);

            boolean retorno = false;
            for (int i = 0; i < tblCarrinho.getRowCount(); i++) {
                int idProduto = Integer.parseInt(tblCarrinho.getValueAt(i, 1).toString());
                double ValorProduto = Double.parseDouble(tblCarrinho.getValueAt(i, 4).toString());
                int QuantidadeProduto = Integer.parseInt(tblCarrinho.getValueAt(i, 5).toString());

                Relatorio efetuarRelatorio = new Relatorio(idVenda, idProduto, QuantidadeProduto, ValorProduto);
                retorno = RelatorioDAO.efetuarRelatorio(efetuarRelatorio);
            }
            if (retorno) {
                JOptionPane.showMessageDialog(this, "Compra efetuada com sucesso!");
                ftxtVendaCpfCliente.setText("");
                txtVendaNomeCliente.setText("");
                txtVendaRuaCliente.setText("");
                txtVendaEmailCliente.setText("");
                txtVendaTelefoneCliente.setText("");
                DefaultTableModel tabelaCarrinho = (DefaultTableModel) tblCarrinho.getModel();
                tabelaCarrinho.setRowCount(0);
            } else {
                JOptionPane.showMessageDialog(this, "Erro ao efetuar compra!");
            }
        }
    }//GEN-LAST:event_btnFinalizarVendaActionPerformed

    /**
     * Validação do campo de busca do cliente
     */
    private void rdbtnBuscarCpfClienteItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_rdbtnBuscarCpfClienteItemStateChanged
        ftxtBuscarCpfCliente.setEditable(true);
        txtBuscarNomeCliente.setEditable(false);
        txtBuscarNomeCliente.setText("");
    }//GEN-LAST:event_rdbtnBuscarCpfClienteItemStateChanged

    private void rdbtnBuscarNomeClienteItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_rdbtnBuscarNomeClienteItemStateChanged
        ftxtBuscarCpfCliente.setEditable(false);
        ftxtBuscarCpfCliente.setText("");
        txtBuscarNomeCliente.setEditable(true);
    }//GEN-LAST:event_rdbtnBuscarNomeClienteItemStateChanged

    /**
     * Realização do busca do produto de acordo com o campo selecionado
     */
    private void btnBuscarProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarProdutoActionPerformed
        if (rdbtnBuscarIdProduto.isSelected()) {
            Produto buscaPorId = ProdutoDAO.buscarPorId(Integer.parseInt(txtBuscarIdProduto.getText().toString()));

            DefaultTableModel tabelaProduto = (DefaultTableModel) tblProduto.getModel();
            tabelaProduto.setRowCount(0);

            tabelaProduto.addRow(new String[]{
                String.valueOf(buscaPorId.getId()),
                String.valueOf(buscaPorId.getNome()),
                String.valueOf(buscaPorId.getCategoria()),
                String.valueOf(buscaPorId.getDescricao()),
                String.valueOf(buscaPorId.getCor()),
                String.valueOf(buscaPorId.getValorCusto()),
                String.valueOf(buscaPorId.getValorVenda()),
                String.valueOf(buscaPorId.getQuantidade())
            });
        } else if (rdbtnBuscarCategoriaProduto.isSelected()) {
            ArrayList<Produto> buscaPorCategoria = ProdutoDAO.buscarPorCategoria(cbBuscarCategoriaProduto.getSelectedItem().toString());

            DefaultTableModel tabelaProduto = (DefaultTableModel) tblProduto.getModel();
            tabelaProduto.setRowCount(0);

            for (Produto atributo : buscaPorCategoria) {
                tabelaProduto.addRow(new String[]{
                    String.valueOf(atributo.getId()),
                    String.valueOf(atributo.getNome()),
                    String.valueOf(atributo.getCategoria()),
                    String.valueOf(atributo.getDescricao()),
                    String.valueOf(atributo.getCor()),
                    String.valueOf(atributo.getValorCusto()),
                    String.valueOf(atributo.getValorVenda()),
                    String.valueOf(atributo.getQuantidade())
                });
            }
        } else {
            JOptionPane.showMessageDialog(this, "Selecione uma busca!");
        }
    }//GEN-LAST:event_btnBuscarProdutoActionPerformed

    /**
     * Instacia a Alteração de Produto de acordo com o item selecionado da
     * tabela Produto
     */
    private void btnAlterarProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAlterarProdutoActionPerformed
        if (tblProduto.getSelectedRow() == (-1)) {
            JOptionPane.showMessageDialog(this, "Selecione um item!");
        } else {
            int produtoSelecionado = tblProduto.getSelectedRow();

            Produto alterarProduto = ProdutoDAO.buscarPorId(Integer.parseInt(tblProduto.getValueAt(produtoSelecionado, 0).toString()));

            CadastroProduto telaAlterarProduto = new CadastroProduto(alterarProduto);

            telaAlterarProduto.setVisible(true);
        }
    }//GEN-LAST:event_btnAlterarProdutoActionPerformed

    /**
     * Exclusão do produto de acordo com o item selecionado da tabela
     */
    private void btnExcluirProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirProdutoActionPerformed
        if (tblProduto.getSelectedRow() == (-1)) {
            JOptionPane.showMessageDialog(this, "Selecione um item!");
        } else {
            int produtoSelecionado = Integer.parseInt(tblProduto.getValueAt(tblProduto.getSelectedRow(), 0).toString());

            int confirmarExcluirProduto = JOptionPane.showConfirmDialog(this, "Deseja prosseguir?!", "EXCLUIR PRODUTO", JOptionPane.YES_NO_OPTION, JOptionPane.ERROR_MESSAGE);

            if (confirmarExcluirProduto == 0) {
                boolean excluirCliente = ProdutoDAO.excluirProduto(produtoSelecionado);
                if (excluirCliente) {
                    JOptionPane.showMessageDialog(this, "Produto excluído com sucesso!");
                    DefaultTableModel tabelaProduto = (DefaultTableModel) tblProduto.getModel();
                    tabelaProduto.removeRow(tblProduto.getSelectedRow());
                } else {
                    JOptionPane.showMessageDialog(this, "Falha ao excluir o produto!");
                }
            }
        }
    }//GEN-LAST:event_btnExcluirProdutoActionPerformed

    /**
     * Instancia o a Tela de Cadastro de Produto para realização de um novo
     * cadastro
     */
    private void btnCadastrarProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCadastrarProdutoActionPerformed
        CadastroProduto telaCadastroProduto = new CadastroProduto();
        telaCadastroProduto.setVisible(true);
    }//GEN-LAST:event_btnCadastrarProdutoActionPerformed

    /**
     * Listagem dos produto já cadastrados
     */
    private void btnListarProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnListarProdutoActionPerformed
        ArrayList<Produto> listaDeProduto = ProdutoDAO.listarProdutos();

        if (listaDeProduto == null) {
            JOptionPane.showMessageDialog(this, "Não há registros para serem listados!");
        } else {
            DefaultTableModel tabelaProduto = (DefaultTableModel) tblProduto.getModel();
            tabelaProduto.setRowCount(0);

            for (Produto atributo : listaDeProduto) {
                tabelaProduto.addRow(new String[]{
                    String.valueOf(atributo.getId()),
                    String.valueOf(atributo.getNome()),
                    String.valueOf(atributo.getCategoria()),
                    String.valueOf(atributo.getDescricao()),
                    String.valueOf(atributo.getCor()),
                    String.valueOf(atributo.getValorCusto()),
                    String.valueOf(atributo.getValorVenda()),
                    String.valueOf(atributo.getQuantidade())
                });
            }
        }
    }//GEN-LAST:event_btnListarProdutoActionPerformed

    /**
     * Finalização da execução do sistema
     */
    private void btnSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSairActionPerformed
        System.exit(0);
    }//GEN-LAST:event_btnSairActionPerformed

    /**
     * Validação do campo de busca do Produto
     */
    private void rdbtnBuscarIdProdutoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_rdbtnBuscarIdProdutoItemStateChanged
        txtBuscarIdProduto.setEnabled(true);
        cbBuscarCategoriaProduto.setEnabled(false);
        cbBuscarCategoriaProduto.setSelectedIndex(0);
    }//GEN-LAST:event_rdbtnBuscarIdProdutoItemStateChanged

    private void rdbtnBuscarCategoriaProdutoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_rdbtnBuscarCategoriaProdutoItemStateChanged
        txtBuscarIdProduto.setEnabled(false);
        txtBuscarIdProduto.setText("");
        cbBuscarCategoriaProduto.setEnabled(true);
    }//GEN-LAST:event_rdbtnBuscarCategoriaProdutoItemStateChanged

    /**
     * Realização da busca dos produtos para a listagem na tabela de Venda de
     * acordo com a categoria selecionado
     */
    private void btnVendaBuscarProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVendaBuscarProdutoActionPerformed
        if (cbVendaCategoriaProduto.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(this, "Selecione uma categoria!");
        } else {
            ArrayList<Produto> buscaPorCategoria = ProdutoDAO.buscarPorCategoria(cbVendaCategoriaProduto.getSelectedItem().toString());

            DefaultTableModel tabelaProduto = (DefaultTableModel) tblVendaProduto.getModel();
            tabelaProduto.setRowCount(0);

            for (Produto atributo : buscaPorCategoria) {
                tabelaProduto.addRow(new String[]{
                    String.valueOf(atributo.getId()),
                    String.valueOf(atributo.getNome()),
                    String.valueOf(atributo.getCategoria()),
                    String.valueOf(atributo.getDescricao()),
                    String.valueOf(atributo.getCor()),
                    String.valueOf(atributo.getValorVenda()),
                    String.valueOf(atributo.getQuantidade())
                });
            }
        }
    }//GEN-LAST:event_btnVendaBuscarProdutoActionPerformed

    /**
     * Realização da listagem de produtos já cadastrados na tabela de Venda
     */
    private void btnVendaListarProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVendaListarProdutoActionPerformed
        ArrayList<Produto> listaDeProdutoVenda = ProdutoDAO.listarProdutos();

        if (listaDeProdutoVenda == null) {
            JOptionPane.showMessageDialog(this, "Não há registros para serem listados!");
        } else {
            DefaultTableModel tabelaVendaProduto = (DefaultTableModel) tblVendaProduto.getModel();
            tabelaVendaProduto.setRowCount(0);

            for (Produto atributo : listaDeProdutoVenda) {
                tabelaVendaProduto.addRow(new String[]{
                    String.valueOf(atributo.getId()),
                    String.valueOf(atributo.getNome()),
                    String.valueOf(atributo.getCategoria()),
                    String.valueOf(atributo.getDescricao()),
                    String.valueOf(atributo.getCor()),
                    String.valueOf(atributo.getValorVenda()),
                    String.valueOf(atributo.getQuantidade())
                });
            }
        }
    }//GEN-LAST:event_btnVendaListarProdutoActionPerformed

    /**
     * Adiciona o item selecionado na tabela Carrinho
     */
    private void btnAdicionarCarrinhoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdicionarCarrinhoActionPerformed
        if (tblVendaProduto.getSelectedRow() == (-1)) {
            JOptionPane.showMessageDialog(this, "Selecione um item!");
        } else {
            int qtdProdutoSelecionado = Integer.parseInt(spnVendaQuantidadeProduto.getValue().toString());
            int qtdProdutoEstoque = Integer.parseInt(tblVendaProduto.getValueAt(tblVendaProduto.getSelectedRow(), 6).toString());

            if (qtdProdutoSelecionado > qtdProdutoEstoque) {
                JOptionPane.showMessageDialog(this, "A quantidade do produto selecionado excede nosso estoque, selecione um valor de até " + qtdProdutoEstoque + " unidades.");
            } else {
                Produto adicionarProdutoAoCarrinho = ProdutoDAO.buscarPorId(Integer.parseInt(tblVendaProduto.getValueAt(tblVendaProduto.getSelectedRow(), 0).toString()));

                DefaultTableModel tabelaCarrinho = (DefaultTableModel) tblCarrinho.getModel();

                double subTotal = adicionarProdutoAoCarrinho.getValorVenda() * qtdProdutoSelecionado;

                tabelaCarrinho.addRow(new String[]{
                    String.valueOf(tabelaCarrinho.getRowCount() + 1),
                    String.valueOf(adicionarProdutoAoCarrinho.getId()),
                    String.valueOf(adicionarProdutoAoCarrinho.getNome()),
                    String.valueOf(adicionarProdutoAoCarrinho.getCategoria()),
                    String.valueOf(adicionarProdutoAoCarrinho.getValorVenda()),
                    String.valueOf(spnVendaQuantidadeProduto.getValue()),
                    String.valueOf(subTotal)
                });

                double total = 0;

                for (int i = 0; i < tblCarrinho.getRowCount(); i++) {
                    total += Double.parseDouble(tblCarrinho.getValueAt(i, 6).toString());
                }

                ftxtTotalVenda.setValue(total);
            }
        }
    }//GEN-LAST:event_btnAdicionarCarrinhoActionPerformed

    /**
     * Remove o item seleionado na tabela Carrinho
     */
    private void btnRemoveItemCarrinhoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveItemCarrinhoActionPerformed
        if (tblCarrinho.getSelectedRow() == (-1)) {
            JOptionPane.showMessageDialog(this, "Selecione um item!");
        } else {
            DefaultTableModel tabelaCarrinho = (DefaultTableModel) tblCarrinho.getModel();

            tabelaCarrinho.removeRow(tblCarrinho.getSelectedRow());

            double total = 0.0;

            for (int i = 0; i < tblCarrinho.getRowCount(); i++) {
                Produto produtoCarrinho = ProdutoDAO.buscarPorId(Integer.parseInt(tblCarrinho.getValueAt(i, 1).toString()));
                total += produtoCarrinho.getValorVenda();
            }

            ftxtTotalVenda.setValue(total);
        }
    }//GEN-LAST:event_btnRemoveItemCarrinhoActionPerformed

    /**
     * Realiza a busca do CPF do Cliente para validação e finalização da venda
     */
    private void btnVendaValidarCPFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVendaValidarCPFActionPerformed
        Validador validador = new Validador();

        if (!validador.isCPF(ftxtVendaCpfCliente.getText())) {
            JOptionPane.showMessageDialog(this, "Verifique se o campo CPF está corretamente preenchido!");
            txtVendaNomeCliente.setText("");
            txtVendaRuaCliente.setText("");
            txtVendaEmailCliente.setText("");
            txtVendaTelefoneCliente.setText("");
        } else {
            Cliente buscaPorCpf = ClienteDAO.buscarPorCPF(ftxtVendaCpfCliente.getText().toString());

            txtVendaNomeCliente.setText(buscaPorCpf.getNome());
            txtVendaRuaCliente.setText(buscaPorCpf.getRua());
            txtVendaTelefoneCliente.setText(buscaPorCpf.getTelefone());
            txtVendaEmailCliente.setText(buscaPorCpf.getEmail());
        }
    }//GEN-LAST:event_btnVendaValidarCPFActionPerformed

    /**
     * Restringe o campo para entrada somente de valores numéricos
     */
    private void spnVendaQuantidadeProdutoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_spnVendaQuantidadeProdutoKeyTyped
        char key = evt.getKeyChar();

        if ((key < '0' || key > '9') && key != KeyEvent.VK_BACK_SPACE) {
            evt.consume();
        }
    }//GEN-LAST:event_spnVendaQuantidadeProdutoKeyTyped

    /**
     * Restringe o campo para entrada somente de valores numéricos
     */
    private void txtBuscarIdProdutoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscarIdProdutoKeyTyped
        char key = evt.getKeyChar();

        if ((key < '0' || key > '9') && key != KeyEvent.VK_BACK_SPACE) {
            evt.consume();
        }
    }//GEN-LAST:event_txtBuscarIdProdutoKeyTyped

    /**
     * Instacia a Tela de Cadastro de Cliente para o cadastramento de um novo
     * cliente
     */
    private void btnCadastrarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCadastrarClienteActionPerformed
        CadastroCliente telaCadastroCliente = new CadastroCliente();
        telaCadastroCliente.setVisible(true);
    }//GEN-LAST:event_btnCadastrarClienteActionPerformed

    /**
     * Instacia a Alteração de Cliente de acordo com o cliente selecionado na
     * tabela Cliente
     */
    private void btnAlterarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAlterarClienteActionPerformed
        if (tblCliente.getSelectedRow() == (-1)) {
            JOptionPane.showMessageDialog(this, "Selecione um item!");
        } else {
            int clienteSelecionado = tblCliente.getSelectedRow();

            Cliente alterarCliente = ClienteDAO.buscarPorCPF(String.valueOf(tblCliente.getValueAt(clienteSelecionado, 0)));

            CadastroCliente telaAlterarCliente = null;
            try {
                telaAlterarCliente = new CadastroCliente(alterarCliente);
            } catch (ParseException ex) {
                Logger.getLogger(PrincipalScreen.class.getName()).log(Level.SEVERE, null, ex);
            }
            telaAlterarCliente.setVisible(true);
        }
    }//GEN-LAST:event_btnAlterarClienteActionPerformed

    /**
     * Exclui o Cliente selecionado na tabela Cliente
     */
    private void btnExcluirClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirClienteActionPerformed
        if (tblCliente.getSelectedRow() == (-1)) {
            JOptionPane.showMessageDialog(this, "Selecione um item!");
        } else {
            String clienteSelecionado = String.valueOf(tblCliente.getValueAt(tblCliente.getSelectedRow(), 0));

            int confirmarExcluirCliente = JOptionPane.showConfirmDialog(this, "Deseja prosseguir?!", "EXCLUIR CLIENTE", JOptionPane.YES_NO_OPTION, JOptionPane.ERROR_MESSAGE);
            System.out.println(confirmarExcluirCliente);

            if (confirmarExcluirCliente == 0) {
                boolean excluirCliente = ClienteDAO.excluirCliente(clienteSelecionado);
                if (excluirCliente) {
                    JOptionPane.showMessageDialog(this, "Cliente excluído com sucesso!");
                    DefaultTableModel tabelaCliente = (DefaultTableModel) tblCliente.getModel();
                    tabelaCliente.removeRow(tblCliente.getSelectedRow());
                } else {
                    JOptionPane.showMessageDialog(this, "Falha ao excluir o cliente!");
                }
            }
        }
    }//GEN-LAST:event_btnExcluirClienteActionPerformed

    /**
     * Lista todos os clientes já cadastrados
     */
    private void btnListarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnListarClienteActionPerformed
        ArrayList<Cliente> listaDeClientes = ClienteDAO.listarClientes();

        if (listaDeClientes == null) {
            JOptionPane.showMessageDialog(this, "Não há registros para serem listados!");
        } else {
            DefaultTableModel tabelaClientes = (DefaultTableModel) tblCliente.getModel();
            tabelaClientes.setRowCount(0);

            for (Cliente atributo : listaDeClientes) {
                tabelaClientes.addRow(new String[]{
                    String.valueOf(atributo.getCPF()),
                    String.valueOf(atributo.getNome()),
                    String.valueOf(atributo.getNascimento()),
                    String.valueOf(atributo.getRua()),
                    //String.valueOf(atributo.getBairro()),
                    String.valueOf(atributo.getCEP()),
                    //String.valueOf(atributo.getCidade()),
                    String.valueOf(atributo.getUF()),
                    String.valueOf(atributo.getTelefone()),
                    //String.valueOf(atributo.getTelefoneOpc()),
                    String.valueOf(atributo.getEmail()), //String.valueOf(atributo.getGenero()),
                //String.valueOf(atributo.getEstadoCivil())
                });
            }
        }
    }//GEN-LAST:event_btnListarClienteActionPerformed

    /**
     * Realiza a busca do cliente de acordo com o campo selecionado
     */
    private void btnBuscarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarClienteActionPerformed
        if (rdbtnBuscarCpfCliente.isSelected()) {
            Cliente buscaPorCpf = ClienteDAO.buscarPorCPF(ftxtBuscarCpfCliente.getText().toString());

            if (buscaPorCpf.getCPF() == null) {
                JOptionPane.showMessageDialog(this, "CPF não encontrado!");
            } else {
                DefaultTableModel tabelaCliente = (DefaultTableModel) tblCliente.getModel();
                tabelaCliente.setRowCount(0);

                tabelaCliente.addRow(new String[]{
                    String.valueOf(buscaPorCpf.getCPF()),
                    String.valueOf(buscaPorCpf.getNome()),
                    String.valueOf(buscaPorCpf.getNascimento()),
                    String.valueOf(buscaPorCpf.getRua()),
                    //String.valueOf(buscaPorCpf.getBairro()),
                    String.valueOf(buscaPorCpf.getCEP()),
                    //String.valueOf(buscaPorCpf.getCidade()),
                    String.valueOf(buscaPorCpf.getUF()),
                    String.valueOf(buscaPorCpf.getTelefone()),
                    //String.valueOf(buscaPorCpf.getTelefoneOpc()),
                    String.valueOf(buscaPorCpf.getEmail()), //String.valueOf(buscaPorCpf.getGenero()),
                //String.valueOf(buscaPorCpf.getEstadoCivil())
                });
            }
        } else if (rdbtnBuscarNomeCliente.isSelected()) {
            if (txtBuscarNomeCliente.getText().trim().equals("")) {
                JOptionPane.showMessageDialog(this, "Digite algo na busca por nome!");
            } else {
                ArrayList<Cliente> buscaPorNome = ClienteDAO.buscarPorNome(txtBuscarNomeCliente.getText().toString());

                DefaultTableModel tabelaCliente = (DefaultTableModel) tblCliente.getModel();
                tabelaCliente.setRowCount(0);

                for (Cliente atributo : buscaPorNome) {
                    tabelaCliente.addRow(new String[]{
                        String.valueOf(atributo.getCPF()),
                        String.valueOf(atributo.getNome()),
                        String.valueOf(atributo.getNascimento()),
                        String.valueOf(atributo.getRua()),
                        //String.valueOf(atributo.getBairro()),
                        String.valueOf(atributo.getCEP()),
                        //String.valueOf(atributo.getCidade()),
                        String.valueOf(atributo.getUF()),
                        String.valueOf(atributo.getTelefone()),
                        //String.valueOf(atributo.getTelefoneOpc()),
                        String.valueOf(atributo.getEmail()), //String.valueOf(atributo.getGenero()),
                    //String.valueOf(atributo.getEstadoCivil())
                    });
                }
            }
        } else {
            JOptionPane.showMessageDialog(this, "Selecione uma busca!");
        }
    }//GEN-LAST:event_btnBuscarClienteActionPerformed

    /**
     * Lista todas as vendas realizadas que estão armazenadas no banco de dados
     */
    private void btnListarRelatorioSinteticoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnListarRelatorioSinteticoActionPerformed
        ArrayList<Venda> listaDeVendas = VendaDAO.listarVendas();

        DefaultTableModel tabelaRelatorioAnalitico = (DefaultTableModel) tblRelatorioAnalitico.getModel();
        tabelaRelatorioAnalitico.setRowCount(0);

        if (listaDeVendas == null) {
            JOptionPane.showMessageDialog(this, "Não há registros para serem listados!");
        } else {
            double totalPeriodo = 0;

            DefaultTableModel tabelaRelatorioSintetico = (DefaultTableModel) tblRelatorioSintetico.getModel();
            tabelaRelatorioSintetico.setRowCount(0);

            for (Venda atributo : listaDeVendas) {
                tabelaRelatorioSintetico.addRow(new String[]{
                    String.valueOf(atributo.getIDVenda()),
                    String.valueOf(atributo.getCPFCliente()),
                    String.valueOf(atributo.getNomeCliente()),
                    String.valueOf(atributo.getValorTotal()),
                    String.valueOf(atributo.getDataVenda())
                });

                totalPeriodo += atributo.getValorTotal();
            }

            ftxtTotalPeriodo.setValue(totalPeriodo);
        }
    }//GEN-LAST:event_btnListarRelatorioSinteticoActionPerformed

    /**
     * Lista os detalhes da compra de acordo com a linha selecionada da tabela
     * Relatorio Sintético
     */
    private void btnMostrarRelatorioAnaliticoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMostrarRelatorioAnaliticoActionPerformed
        if (tblRelatorioSintetico.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(this, "Selecione um item!");
        } else {
            ArrayList<Relatorio> listaDeRelatorios = RelatorioDAO.listarRelatorio(Integer.parseInt(tblRelatorioSintetico.getValueAt(tblRelatorioSintetico.getSelectedRow(), 0).toString()));

            if (listaDeRelatorios == null) {
                JOptionPane.showMessageDialog(this, "Não há registros para serem listados!");
            } else {
                DefaultTableModel tabelaRelatorioAnalitico = (DefaultTableModel) tblRelatorioAnalitico.getModel();
                tabelaRelatorioAnalitico.setRowCount(0);

                for (Relatorio atributo : listaDeRelatorios) {
                    tabelaRelatorioAnalitico.addRow(new String[]{
                        String.valueOf(atributo.getIDProduto()),
                        String.valueOf(atributo.getNomeProduto()),
                        String.valueOf(atributo.getQuantidadeProduto()),
                        String.valueOf(atributo.getValorProduto()),
                        String.valueOf(atributo.getValorTotalProduto())
                    });
                }
            }
        }
    }//GEN-LAST:event_btnMostrarRelatorioAnaliticoActionPerformed

    /**
     * Realiza a consilta das vendas entre o período selecionado
     */
    private void btnBuscarRelatorioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarRelatorioActionPerformed
        DefaultTableModel tabelaRelatorioAnalitico = (DefaultTableModel) tblRelatorioAnalitico.getModel();
        tabelaRelatorioAnalitico.setRowCount(0);

        Date dataInicial = dcDataInicio.getDate();
        Date dataFinal = dcDataFim.getDate();
        if (dataInicial == null || dataFinal == null) {
            JOptionPane.showMessageDialog(this, "Certifique-se de preencher ambos os campos de Data!");
        } else if (dataFinal.before(dataInicial)) {
            JOptionPane.showMessageDialog(this, "Defina uma data final posterior a data inicial!");
        } else {
            SimpleDateFormat data = new SimpleDateFormat("yyyy-MM-dd");
            String dataInicio = data.format(dcDataInicio.getDate());
            String dataFim = data.format(dcDataFim.getDate());

            ArrayList<Venda> listaDeVendas = VendaDAO.listarVendasPorPeriodo(dataInicio, dataFim);

            if (listaDeVendas == null) {
                JOptionPane.showMessageDialog(this, "Não há registros entre as datas informadas!");
            } else {
                double totalPeriodo = 0;

                DefaultTableModel tabelaRelatorioSintetico = (DefaultTableModel) tblRelatorioSintetico.getModel();
                tabelaRelatorioSintetico.setRowCount(0);

                for (Venda atributo : listaDeVendas) {
                    tabelaRelatorioSintetico.addRow(new String[]{
                        String.valueOf(atributo.getIDVenda()),
                        String.valueOf(atributo.getCPFCliente()),
                        String.valueOf(atributo.getNomeCliente()),
                        String.valueOf(atributo.getValorTotal()),
                        String.valueOf(atributo.getDataVenda())
                    });

                    totalPeriodo += atributo.getValorTotal();
                }

                ftxtTotalPeriodo.setValue(totalPeriodo);
            }
        }
    }//GEN-LAST:event_btnBuscarRelatorioActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PrincipalScreen.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PrincipalScreen.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PrincipalScreen.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PrincipalScreen.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new PrincipalScreen().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdicionarCarrinho;
    private javax.swing.JButton btnAlterarCliente;
    private javax.swing.JButton btnAlterarProduto;
    private javax.swing.JButton btnBuscarCliente;
    private javax.swing.JButton btnBuscarProduto;
    private javax.swing.JButton btnBuscarRelatorio;
    private javax.swing.JButton btnCadastrarCliente;
    private javax.swing.JButton btnCadastrarProduto;
    private javax.swing.JButton btnExcluirCliente;
    private javax.swing.JButton btnExcluirProduto;
    private javax.swing.JButton btnFinalizarVenda;
    private javax.swing.JButton btnListarCliente;
    private javax.swing.JButton btnListarProduto;
    private javax.swing.JButton btnListarRelatorioSintetico;
    private javax.swing.JButton btnMostrarRelatorioAnalitico;
    private javax.swing.JButton btnRemoveItemCarrinho;
    private javax.swing.JButton btnSair;
    private javax.swing.JButton btnVendaBuscarProduto;
    private javax.swing.JButton btnVendaListarProduto;
    private javax.swing.JButton btnVendaValidarCPF;
    private javax.swing.ButtonGroup btngrpBuscarCliente;
    private javax.swing.ButtonGroup btngrpBuscarProduto;
    private javax.swing.JComboBox<String> cbBuscarCategoriaProduto;
    private javax.swing.JComboBox<String> cbVendaCategoriaProduto;
    private com.toedter.calendar.JDateChooser dcDataFim;
    private com.toedter.calendar.JDateChooser dcDataInicio;
    private javax.swing.JFormattedTextField ftxtBuscarCpfCliente;
    private javax.swing.JFormattedTextField ftxtTotalPeriodo;
    private javax.swing.JFormattedTextField ftxtTotalVenda;
    private javax.swing.JFormattedTextField ftxtVendaCpfCliente;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JLabel lblName;
    private javax.swing.JPanel pnlGerirCliente;
    private javax.swing.JPanel pnlGerirProdutos;
    private javax.swing.JPanel pnlInicio;
    private javax.swing.JTabbedPane pnlLojaIntrumentosMusicais;
    private javax.swing.JPanel pnlMainScreen;
    private javax.swing.JPanel pnlRelatVendas;
    private javax.swing.JTabbedPane pnlVendas;
    private javax.swing.JRadioButton rdbtnBuscarCategoriaProduto;
    private javax.swing.JRadioButton rdbtnBuscarCpfCliente;
    private javax.swing.JRadioButton rdbtnBuscarIdProduto;
    private javax.swing.JRadioButton rdbtnBuscarNomeCliente;
    private javax.swing.JSpinner spnVendaQuantidadeProduto;
    private javax.swing.JTable tblCarrinho;
    private javax.swing.JTable tblCliente;
    private javax.swing.JTable tblProduto;
    private javax.swing.JTable tblRelatorioAnalitico;
    private javax.swing.JTable tblRelatorioSintetico;
    private javax.swing.JTable tblVendaProduto;
    private javax.swing.JTextField txtBuscarIdProduto;
    private javax.swing.JTextField txtBuscarNomeCliente;
    private javax.swing.JTextField txtVendaEmailCliente;
    private javax.swing.JTextField txtVendaNomeCliente;
    private javax.swing.JTextField txtVendaRuaCliente;
    private javax.swing.JTextField txtVendaTelefoneCliente;
    // End of variables declaration//GEN-END:variables
}
